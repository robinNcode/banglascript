[
  {
    "id": "description",
    "title": "বর্ণনা",
    "description": "BanglaScript এর বর্ণনা বিভাগে আপনাকে স্বাগতম। এখানে আপনি BanglaScript কি, কেন এটি তৈরি করা হয়েছে এবং এর মূল উদ্দেশ্য সম্পর্কে জানতে পারবেন। BanglaScript একটি পরীক্ষামূলক প্রোগ্রামিং ভাষা যা বাংলা সিনট্যাক্স ব্যবহার করে কোডিং শেখার প্রক্রিয়াকে সহজ করার জন্য ডিজাইন করা হয়েছে।",
    "extended_description": "BanglaScript এর প্রধান লক্ষ্য হল বাংলাভাষী শিক্ষার্থীদের জন্য প্রোগ্রামিংকে আরও সহজলভ্য করা। এটি একটি সহজবোধ্য সিনট্যাক্স ব্যবহার করে, যা ইংরেজি ভাষার উপর নির্ভরশীলতা কমিয়ে দেয়। এর মাধ্যমে, নতুন প্রোগ্রামাররা তাদের মাতৃভাষায় কোডিংয়ের মৌলিক ধারণাগুলো শিখতে পারবে এবং প্রোগ্রামিংয়ের প্রতি আগ্রহ তৈরি করতে পারবে।",
    "conclusion": "আমরা আশা করি BanglaScript আপনাকে প্রোগ্রামিংয়ের জগতে একটি নতুন অভিজ্ঞতা দেবে। এটি একটি চলমান প্রকল্প, এবং আমরা আপনার মতামত ও অবদানকে স্বাগত জানাই।",
    "examples": [
      {
        "tab": "সাধারণ",
        "code": "দেখাও(\"হ্যালো, বিশ্ব!\");"
      },
      {
        "tab": "চলক ব্যবহার",
        "code": "ধরি নাম = \"BanglaScript\";\nদেখাও(\"আমার নাম: \" + নাম);"
      }
    ]
  },
  {
    "id": "basics",
    "title": "মৌলিক উদাহরণ",
    "description": "এই বিভাগে BanglaScript এর মৌলিক সিনট্যাক্স এবং সাধারণ প্রোগ্রামিং ধারণাগুলি নিয়ে আলোচনা করা হয়েছে। এখানে আপনি কিভাবে চলক ঘোষণা করতে হয়, ডেটা টাইপ ব্যবহার করতে হয় এবং সহজ গাণিতিক অপারেশন করতে হয় তা শিখবেন।",
    "extended_description": "BanglaScript এ প্রোগ্রামিং শুরু করার জন্য, আপনাকে প্রথমে এর মৌলিক কাঠামো বুঝতে হবে। প্রতিটি প্রোগ্রাম একটি নির্দিষ্ট কাজ সম্পাদনের জন্য নির্দেশাবলীর একটি সেট নিয়ে গঠিত। এই নির্দেশাবলীগুলি চলক, অপারেটর এবং ফাংশন ব্যবহার করে লেখা হয়।",
    "conclusion": "এই মৌলিক ধারণাগুলি আপনাকে BanglaScript এ আপনার প্রথম প্রোগ্রাম লিখতে সাহায্য করবে। পরবর্তী বিভাগগুলিতে আরও বিস্তারিত বিষয় নিয়ে আলোচনা করা হবে।",
    "examples": [
      {
        "tab": "সাধারণ",
        "code": "দেখাও(\"হ্যালো, বিশ্ব!\");"
      },
      {
        "tab": "চলক ব্যবহার",
        "code": "ধরি নাম = \"BanglaScript\";\nদেখাও(\"আমার নাম: \" + নাম);"
      }
    ]
  },
  {
    "id": "variables",
    "title": "চলক ঘোষণা",
    "description": "চলক হল ডেটা সংরক্ষণের জন্য ব্যবহৃত নামযুক্ত স্থান। BanglaScript এ চলক ঘোষণা করার জন্য 'ধরি' কীওয়ার্ড ব্যবহার করা হয়।",
    "extended_description": "চলকগুলি বিভিন্ন ধরণের ডেটা সংরক্ষণ করতে পারে, যেমন সংখ্যা, স্ট্রিং, বুলিয়ান ইত্যাদি। চলকের নাম বর্ণ, সংখ্যা এবং আন্ডারস্কোর দিয়ে শুরু হতে পারে, তবে সংখ্যা দিয়ে শুরু হতে পারে না। চলকের নাম কেস-সেনসিটিভ।",
    "conclusion": "সঠিকভাবে চলক ব্যবহার করা প্রোগ্রামিংয়ের একটি গুরুত্বপূর্ণ অংশ। এটি আপনার কোডকে আরও পঠনযোগ্য এবং রক্ষণাবেক্ষণযোগ্য করে তোলে।",
    "examples": [
      {
        "tab": "সংখ্যা",
        "code": "ধরি বয়স = 25;"
      },
      {
        "tab": "স্ট্রিং",
        "code": "ধরি নাম = \"করিম\";"
      },
      {
        "tab": "বুলিয়ান",
        "code": "ধরি সফল = সত্যি;"
      }
    ]
  },
  {
    "id": "operators",
    "title": "গাণিতিক অপারেটর",
    "description": "গাণিতিক অপারেটরগুলি গাণিতিক অপারেশন সম্পাদনের জন্য ব্যবহৃত হয়, যেমন যোগ, বিয়োগ, গুণ এবং ভাগ।",
    "extended_description": "BanglaScript এ সাধারণ গাণিতিক অপারেটরগুলি ব্যবহার করা হয়। এগুলি সংখ্যাসূচক মানগুলির উপর কাজ করে এবং একটি সংখ্যাসূচক ফলাফল প্রদান করে। অপারেটরগুলির অগ্রাধিকার নিয়ম রয়েছে, যা গাণিতিক এক্সপ্রেশনগুলির মূল্যায়নকে প্রভাবিত করে।",
    "conclusion": "গাণিতিক অপারেটরগুলি প্রোগ্রামিংয়ে সংখ্যাসূচক ডেটা প্রক্রিয়াকরণের জন্য অপরিহার্য।",
    "examples": [
      {
        "tab": "যোগ",
        "code": "ধরি ক = 10;\nধ্রুবক খ = 5;\nযোগফল = ক + খ;\nদেখাও(যোগফল);"
      },
      {
        "tab": "বিয়োগ",
        "code": "ধরি ক = 10;\nধ্রুবক খ = 5;\nবিয়োগফল = ক - খ;\nদেখাও(বিয়োগফল);"
      },
      {
        "tab": "গুণ",
        "code": "ধরি ক = 10;\nধ্রুবক খ = 5;\nগুণফল = ক * খ;\nদেখাও(গুণফল);"
      },
      {
        "tab": "ভাগ",
        "code": "ধরি ক = 10;\nধ্রুবক খ = 5;\nভাগফল = ক / খ;\nদেখাও(ভাগফল);"
      }
    ]
  },
  {
    "id": "arithmeticFunctions",
    "title": "গাণিতিক ফাংশন",
    "description": "BanglaScript এ কিছু বিল্ট-ইন গাণিতিক ফাংশন রয়েছে যা জটিল গাণিতিক অপারেশন সম্পাদনে সহায়তা করে।",
    "extended_description": "এই ফাংশনগুলি আপনাকে সর্বোচ্চ বা সর্বনিম্ন মান খুঁজে বের করতে, সংখ্যাকে পূর্ণসংখ্যায় রূপান্তর করতে এবং পাওয়ার গণনা করতে সাহায্য করে। এগুলি আপনার কোডকে আরও সংক্ষিপ্ত এবং কার্যকরী করে তোলে।",
    "conclusion": "গাণিতিক ফাংশনগুলি ডেটা প্রক্রিয়াকরণ এবং গাণিতিক সমস্যা সমাধানের জন্য অত্যন্ত কার্যকর।",
    "examples": [
      {
        "tab": "ম্যাক্স",
        "code": "ধরি সংখ্যা1 = 10;\nধরি সংখ্যা2 = 20;\nসর্বোচ্চ = ম্যাক্স(সংখ্যা1, সংখ্যা2);\nদেখাও(সর্বোচ্চ);"
      },
      {
        "tab": "মিন",
        "code": "ধরি সংখ্যা1 = 10;\nধরি সংখ্যা2 = 20;\nসর্বনিম্ন = মিন(সংখ্যা1, সংখ্যা2);\nদেখাও(সর্বনিম্ন);"
      },
      {
        "tab": "রাউন্ড",
        "code": "ধরি দশমিক = 5.67;\nপূর্ণসংখ্যা = রাউন্ড(দশমিক);\nদেখাও(পূর্ণসংখ্যা);"
      },
      {
        "tab": "পাওয়ার",
        "code": "ধরি বেস = 2;\nধরি সূচক = 3;\nফলাফল = পাওয়ার(বেস, সূচক);\nদেখাও(ফলাফল);"
      }
    ]
  },
  {
    "id": "conditionals",
    "title": "শর্তসাপেক্ষ বিবৃতি",
    "description": "শর্তসাপেক্ষ বিবৃতিগুলি আপনাকে নির্দিষ্ট শর্তের উপর ভিত্তি করে কোডের ব্লকগুলি কার্যকর করতে দেয়। 'যদি', 'নয়তোযদি' এবং 'নয়তো' কীওয়ার্ডগুলি ব্যবহার করা হয়।",
    "extended_description": "শর্তসাপেক্ষ বিবৃতিগুলি প্রোগ্রামিংয়ে সিদ্ধান্ত গ্রহণের জন্য অপরিহার্য। আপনি একাধিক শর্ত পরীক্ষা করতে পারেন এবং প্রতিটি শর্তের জন্য আলাদা কোড ব্লক সংজ্ঞায়িত করতে পারেন।",
    "conclusion": "শর্তসাপেক্ষ বিবৃতিগুলি আপনার প্রোগ্রামকে আরও গতিশীল এবং প্রতিক্রিয়াশীল করে তোলে।",
    "examples": [
      {
        "tab": "যদি-নয়তো",
        "code": "ধরি বয়স = 18;\nযদি (বয়স >= 18) {\n  দেখাও(\"আপনি ভোট দিতে পারবেন।\");\n} \nনয়তো {\n  দেখাও(\"আপনি ভোট দিতে পারবেন না।\");\n}"
      },
      {
        "tab": "যদি-নয়তোযদি-নয়তো",
        "code": "চলক স্কোর = 85;\nযদি (স্কোর >= 90) {\n  দেখাও(\"আপনি A গ্রেড পেয়েছেন।\");\n} \nনয়তোযদি (স্কোর >= 75) {\n  দেখাও(\"আপনি B গ্রেড পেয়েছেন।\");\n} \nনয়তো {\n  দেখাও(\"আপনি C গ্রেড পেয়েছেন।\");\n}"
      }
    ]
  },
  {
    "id": "loops",
    "title": "লুপ",
    "description": "লুপগুলি আপনাকে একটি নির্দিষ্ট সংখ্যক বার বা একটি শর্ত পূরণ না হওয়া পর্যন্ত কোডের ব্লকগুলি পুনরাবৃত্তি করতে দেয়। 'জন্য' এবং 'যতক্ষণ' লুপগুলি ব্যবহার করা হয়।",
    "extended_description": "লুপগুলি ডেটা প্রক্রিয়াকরণ, তালিকা বা অ্যারেতে পুনরাবৃত্তি এবং নির্দিষ্ট কাজগুলি স্বয়ংক্রিয় করার জন্য অত্যন্ত কার্যকর। আপনি লুপের মধ্যে শর্তাবলী এবং ব্রেক স্টেটমেন্ট ব্যবহার করে লুপের প্রবাহ নিয়ন্ত্রণ করতে পারেন।",
    "conclusion": "লুপগুলি প্রোগ্রামিংয়ে পুনরাবৃত্তিমূলক কাজগুলি সম্পাদনের জন্য একটি শক্তিশালী সরঞ্জাম।",
    "examples": [
      {
        "tab": "জন্য লুপ",
        "code": "জন্য (ধরি i = 0; i < 5; i = i + 1) {\n  দেখাও(\"লুপ চলছে: \" + i);\n}"
      },
      {
        "tab": "জন্য লুপ ২",
        "code": "জন্য (i = 0; i <= 5; i++) {\n  দেখাও(\"লুপ চলছে: \" + i);\n}"
      },
      {
        "tab": "যতক্ষণ লুপ",
        "code": "ধরি j = 0;\nযতক্ষণ (j < 3) {\n  দেখাও(\"j এর মান: \" + j);\n  j = j + 1;\n}"
      }
    ]
  },
  {
    "id": "functions",
    "title": "ফাংশন",
    "description": "ফাংশনগুলি হল কোডের ব্লক যা একটি নির্দিষ্ট কাজ সম্পাদন করে এবং পুনরায় ব্যবহার করা যেতে পারে। 'কাঠামো' কীওয়ার্ড ব্যবহার করে ফাংশন তৈরি করা হয়।",
    "extended_description": "ফাংশনগুলি আপনার কোডকে মডুলার, পঠনযোগ্য এবং রক্ষণাবেক্ষণযোগ্য করে তোলে। আপনি ফাংশনে আর্গুমেন্ট পাস করতে পারেন এবং ফাংশন থেকে একটি মান ফিরিয়ে দিতে পারেন।",
    "conclusion": "ফাংশনগুলি প্রোগ্রামিংয়ে কোড সংগঠন এবং পুনরায় ব্যবহারের জন্য অপরিহার্য।",
    "examples": [
      {
        "tab": "ফাংশন তৈরি",
        "code": "কাঠামো যোগ(ক, খ) {\n  ফিরিয়ে দাও(ক + খ);\n}\n\nধরি ফলাফল = যোগ(5, 3);\nদেখাও(ফলাফল);"
      }
    ]
  },
  {
    "id": "oop",
    "title": "OOP",
    "description": "অবজেক্ট-ওরিয়েন্টেড প্রোগ্রামিং (OOP) একটি প্রোগ্রামিং প্যারাডাইম যা 'অবজেক্ট' ধারণার উপর ভিত্তি করে তৈরি।",
    "extended_description": "OOP আপনাকে ডেটা এবং ফাংশনগুলিকে অবজেক্টের মধ্যে একত্রিত করতে দেয়, যা কোডকে আরও সংগঠিত এবং পুনরায় ব্যবহারযোগ্য করে তোলে। এটি ইনহেরিটেন্স, পলিমরফিজম এবং এনক্যাপসুলেশনের মতো ধারণাগুলি ব্যবহার করে।",
    "conclusion": "OOP জটিল সিস্টেম ডিজাইন এবং বিকাশের জন্য একটি শক্তিশালী পদ্ধতি।",
    "examples": [
      {
        "tab": "অবজেক্ট",
        "code": "কাঠামো গাড়ি(ব্র্যান্ড) {\n  ধরি এই.ব্র্যান্ড = ব্র্যান্ড;\n  কাঠামো চালাও() {\n    দেখাও(এই.ব্র্যান্ড + \" চলছে।\");\n  }\n}\n\nধরি আমারগাড়ি = নতুন গাড়ি(\"টয়োটা\");\nআমারগাড়ি.চালাও();"
      }
    ]
  },
  {
    "id": "etc",
    "title": "ইত্যাদি",
    "description": "এই বিভাগে BanglaScript এর অন্যান্য বৈশিষ্ট্য এবং ভবিষ্যতের পরিকল্পনা নিয়ে আলোচনা করা হয়েছে।",
    "extended_description": "আমরা ক্রমাগত BanglaScript কে উন্নত করার জন্য কাজ করছি, নতুন বৈশিষ্ট্য যুক্ত করছি এবং বিদ্যমান কার্যকারিতা উন্নত করছি। আপনার প্রতিক্রিয়া এবং অবদান আমাদের জন্য অত্যন্ত মূল্যবান।",
    "conclusion": "BanglaScript একটি ক্রমবর্ধমান প্রকল্প, এবং আমরা এটিকে আরও উন্নত করতে প্রতিশ্রুতিবদ্ধ।",
    "examples": [
      {
        "tab": "আরো",
        "code": "// এটি একটি placeholder\nদেখাও(\"আরো ফিচার শীঘ্রই আসছে...\");"
      }
    ]
  }
]